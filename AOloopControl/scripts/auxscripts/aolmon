#!/bin/bash


# number of arguments to script
NBARGS=2



# ======================= PROCESS NAME =================================
pname="aolmon"



function printHELP {
    echo "------------------------------------------------------------------------"
    echo "$(tput bold) $pname : DISPLAY AO LOOP STATUS $(tput sgr0)"
    echo "------------------------------------------------------------------------"
    echo "  Displays status and performance for AO loop"
    echo "   "
    echo " $(tput bold)USAGE:$(tput sgr0)"
    echo "     $0 [-h] <frequ> <fcols>"
    echo ""
    echo " $(tput bold)OPTIONS:$(tput sgr0)"
    echo "     $(tput bold)-h$(tput sgr0)          help"
    echo ""
    echo " $(tput bold)INPUT:$(tput sgr0)"
    echo "     <frequ>     update frequency"
    echo "     <cols>      number of columns"
    echo ""
    echo "------------------------------------------------------------------------"
}


printHELP1 ()
{
    printf "     $(tput bold)%-25s$(tput sgr0)       Display AO loop stats\n" "$0"
}




# Transform long options to short ones
singlelinehelp=0
for arg in "$@"; do
    shift
    case "$arg" in
        "--help") set -- "$@" "-h" ;;
        "--help1")
            set -- "$@" "-h"
            singlelinehelp=1;
            ;;
        *)        set -- "$@" "$arg"
    esac
done





while getopts :h FLAG; do
    case $FLAG in
        h)  #show help
            if [ "$singlelinehelp" -eq "0" ]; then
                printHELP
            else
                printHELP1
            fi
            exit
            ;;
        \?) #unrecognized option - show help
            echo -e \\n"Option -${BOLD}$OPTARG${NORM} not allowed."
            printHELP
            ;;
    esac
done

shift $((OPTIND-1))









if [ "$1" = "help" ] || [ "$#" -ne $NBARGS ]; then
    if [ "$#" -ne $NBARGS ]; then
        echo "$(tput setaf 1)$(tput bold) Illegal number of parameters ($NBARGS params required, $# entered) $(tput sgr0)"
    fi
    printHELP
    exit
fi










# startup file
SF="aolmonstartup"

echo "aolmon $1 $2" > $SF
echo "exitCLI" >> $SF
./AOloopControl -n $pname -f ${pname}fifo -s $SF
