#!/bin/bash



NBARGS=0
pname=`echo "$0" | sed "s/\.\///g"`




function printHELP {
    echo "------------------------------------------------------------------------"
    echo "$(tput bold) $pname : List running AOloop processes $(tput sgr0)"
    echo "------------------------------------------------------------------------"
    echo "  List running AOloop processes"
    echo "   "
    echo " $(tput bold)USAGE:$(tput sgr0)"
    echo "     $0 [-h]"
    echo ""
    echo ""
    echo "------------------------------------------------------------------------"
}


printHELP1 ()
{
    printf "     $(tput bold)%-25s$(tput sgr0)       List running AOloop processes\n" "$0"
}




# Transform long options to short ones
singlelinehelp=0
for arg in "$@"; do
    shift
    case "$arg" in
        "--help") set -- "$@" "-h" ;;
        "--help1")
            set -- "$@" "-h"
            singlelinehelp=1;
            ;;
        *)        set -- "$@" "$arg"
    esac
done


while getopts :h FLAG; do
    case $FLAG in
        h)  #show help
            if [ "$singlelinehelp" -eq "0" ]; then
                printHELP
            else
                printHELP1
            fi
            exit
            ;;
        \?) #unrecognized option - show help
            echo -e \\n"Option -${BOLD}$OPTARG${NORM} not allowed."
            printHELP
            ;;
    esac
done

shift $((OPTIND-1))







if [ "$1" = "help" ] || [ "$#" -ne $NBARGS ]; then
    if [ "$#" -ne $NBARGS ]; then
        echo "$(tput setaf 1)$(tput bold) Illegal number of parameters ($NBARGS params required, $# entered) $(tput sgr0)"
    fi
    printHELP
    exit
fi







red=`tput setaf 1`
green=`tput setaf 2`
reset=`tput sgr0`
bold=`tput bold`

touch runproc/null.runproc # avoids error message
touch runproc/null.runprocQ # avoids error message

while true;
do
    clear
    datestr=`date -u +%Y-%m-%d_%H:%M:%S`

    echo "DATE = $datestr"
    echo " "
    echo "PROCESSES RUNNING"
    echo "Start Time                          Process Name                      Tmux session    Description"
    echo "-------------------------------------------------------------------------------------------------------------------------------"
    for file in runproc/*.runproc
    do
        line=$( head -1 $file )
        arr=($line)
        comment=`sed 's/^ *[^ ][^ ]*  *//' $file | sed 's/^ *[^ ][^ ]*  *//'| sed 's/^ *[^ ][^ ]*  *//'`

        printf "%s    %40s   %40s    %s\n"   "${arr[0]}"  "${bold}${red}${arr[1]}${reset}"   "${bold}${green}${arr[2]}${reset}"  "$comment"
    done
    echo "-------------------------------------------------------------------------------------------------------------------------------"

    echo " "
    echo "PROCESSES QUEUED"
    echo "Start Time                          Process Name                      Tmux session    Description"
    echo "-------------------------------------------------------------------------------------------------------------------------------"
    for file in runproc/*.runprocQ
    do
        line=$( head -1 $file )
        arr=($line)
        comment=`sed 's/^ *[^ ][^ ]*  *//' $file | sed 's/^ *[^ ][^ ]*  *//'| sed 's/^ *[^ ][^ ]*  *//'`

        printf "%s    %40s   %40s    %s\n"   "${arr[0]}"  "${bold}${red}${arr[1]}${reset}"   "${bold}${green}${arr[2]}${reset}"  "$comment"
    done
    echo "-------------------------------------------------------------------------------------------------------------------------------"

    echo " "
    echo " "

    echo "LOCKS (indicates processes held waiting)"
    echo " "
    ls -1 ./runproc/*.lock 2>/dev/null


    sleep 1.0

done
