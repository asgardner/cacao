#! /bin/bash
# args: <confindex> <maxCPA>



NBARGS=2
pname=`echo "$0" | sed "s/\.\///g"`

function printHELP {
    echo "------------------------------------------------------------------------"
    echo "$(tput bold) $pname : CREATE CM MODES FOR AO LOOP - MODAL DM $(tput sgr0)"
    echo "------------------------------------------------------------------------"
    echo "  CREATE CM MODES FOR AO LOOP - MODAL DM"
    echo "   "
    echo " $(tput bold)USAGE:$(tput sgr0)"
    echo "     $0 [-ha] <mblock> <SVDlim>"
    echo ""
    echo " $(tput bold)OPTIONS:$(tput sgr0)"
    echo "     $(tput bold)-h$(tput sgr0)          help"
    echo "     $(tput bold)-a$(tput sgr0)          compute all modes"
    echo ""
    echo " $(tput bold)INPUT:$(tput sgr0)"
    echo "   <mblock>       : selected block (-1 for all blocks)"
    echo "   <SVDlim>       : SVD limit, relative to strongest mode"
    echo ""
    echo " $(tput bold)OUTPUT:$(tput sgr0)"
    echo "   ./mkmodestmp/fmodesall.fits"
    echo "   ./mkmodestmp/fmodesWFSall.fits"
    echo "   ./mkmodestmp/cmat.fits"
    echo "   ./mkmodestmp/fmodes_xx.fits.fits"
    echo "   ./mkmodestmp/respM_xx.fits.fits"
    echo "   ./mkmodestmp/contrM_xx.fits.fits"
    echo "   ./mkmodestmp/contrMc_xx.fits.fits"
    echo "   ./mkmodestmp/contrMcact_xx.fits.fits"
    echo ""
    echo "  READS: "
    echo "  INPUT: ./conf/aol#_zrepM.fits"
    echo "  INPUT: ./conf/aol#_wfsmask.fits"
    echo ""
    echo "------------------------------------------------------------------------"
}


printHELP1 ()
{
    printf "     $(tput bold)%-25s$(tput sgr0)       CREATE CM MODES FOR AO LOOP, MODAL DM\n" "$0"
}


allmodes=0

# Transform long options to short ones
singlelinehelp=0
for arg in "$@"; do
    shift
    case "$arg" in
        "--help") set -- "$@" "-h" ;;
        "--help1")
            set -- "$@" "-h"
            singlelinehelp=1;
            ;;
        *)        set -- "$@" "$arg"
    esac
done


while getopts :ha FLAG; do
    case $FLAG in
        h)  #show help
            if [ "$singlelinehelp" -eq "0" ]; then
                printHELP
            else
                printHELP1
            fi
            exit
            ;;
        a)
            allmodes=1
            ;;
        \?) #unrecognized option - show help
            echo -e \\n"Option -${BOLD}$OPTARG${NORM} not allowed."
            printHELP
            ;;
    esac
done

shift $((OPTIND-1))







if [ "$1" = "help" ] || [ "$#" -ne $NBARGS ]; then
    if [ "$#" -ne $NBARGS ]; then
        echo "$(tput setaf 1)$(tput bold) Illegal number of parameters ($NBARGS params required, $# entered) $(tput sgr0)"
    fi
    printHELP
    exit
fi










loopnb=$( head -1 LOOPNUMBER )

pname0=$0
pname=${pname0#"./"}-$loopnb

pid=$$



Cmblock="$1"
if [ "$allmodes" = "1" ]; then
    Cmblock="-1"
fi
echo "Cmblock = $Cmblock"

execnamestring="./AOloopControl"



NBmblock=$( head -1 conf/conf_NBmodeblocks.txt )

$execnamestring -n $pname << EOF
cacao.aolnb $loopnb
loadfits "./conf/aol${loopnb}_zrespM.fits" zrespM
loadfits "./conf/aol${loopnb}_wfsmask.fits" wfsmask
aolmkmodesM zrespM ${NBmblock} ${Cmblock} $2
exitCLI
EOF

cp ./mkmodestmp/fmodesall.fits ./conf/aol${loopnb}_DMmodes_zonal.fits


#rm $startupfile
#rm $fifoname
