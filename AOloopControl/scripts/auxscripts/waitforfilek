#!/bin/bash

NBARGS=1
pname=`echo "$0" | sed "s/\.\///g"`




function printHELP {
    echo "------------------------------------------------------------------------"
    echo "$(tput bold) $pname : Wait for file to appear $(tput sgr0)"
    echo "------------------------------------------------------------------------"
    echo "   Create file ./runproc/<tagname>.lock indicating a process is locked"
    echo "   Wait for file ./runproc/<tagname>.unlock to appear and then remove it."
    echo "   File ./runproc/<tagname>.lock will also be removed"
    echo "   "
    echo " $(tput bold)USAGE:$(tput sgr0)"
    echo "     $0 [-ht] <tagname>"
    echo ""
    echo " $(tput bold)OPTIONS:$(tput sgr0)"
    echo "     $(tput bold)-h$(tput sgr0)              help"
    echo "     $(tput bold)-t$(tput sgr0) <delaysec>   maximum wait time (default 10hr)"
    echo ""
    echo " $(tput bold)INPUT:$(tput sgr0)"
    echo "   <fname>    file name"
    echo ""
    echo ""
    echo "------------------------------------------------------------------------"
}


printHELP1 ()
{
    printf "     $(tput bold)%-25s$(tput sgr0)       Wait for file to appear and then remove it\n" "$0"
}




# Transform long options to short ones
singlelinehelp=0
for arg in "$@"; do
    shift
    case "$arg" in
        "--help") set -- "$@" "-h" ;;
        "--help1")
            set -- "$@" "-h"
            singlelinehelp=1;
            ;;
        *)        set -- "$@" "$arg"
    esac
done


MaxWait="36000"

while getopts :ht: FLAG; do
    case $FLAG in
        h)  #show help
            if [ "$singlelinehelp" -eq "0" ]; then
                printHELP
            else
                printHELP1
            fi
            exit
            ;;
        t)
            MaxWait="$OPTARG"
            ;;
        \?) #unrecognized option - show help
            echo -e \\n"Option -${BOLD}$OPTARG${NORM} not allowed."
            printHELP
            ;;
    esac
done

shift $((OPTIND-1))







if [ "$1" = "help" ] || [ "$#" -ne $NBARGS ]; then
    if [ "$#" -ne $NBARGS ]; then
        echo "$(tput setaf 1)$(tput bold) Illegal number of parameters ($NBARGS params required, $# entered) $(tput sgr0)"
    fi
    printHELP
    exit
fi



mkdir -p runproc



cntlim=$(($MaxWait*10))


init="0"
cnt=0
while [[ ! -f "./runproc/$1.unlock" ]] && [[ "$cnt" -lt "${cntlim}" ]]; do
    if [ "$init" -eq "0" ]; then
        init="1"
        echo "waiting for file \"./runproc/$1.unlock\""
    fi
    sleep 0.1;
    let cnt+=1
done
rm ./runproc/$1.unlock
rm ./runproc/$1.lock
