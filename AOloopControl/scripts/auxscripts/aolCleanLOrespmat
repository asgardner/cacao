#! /bin/bash

NBARGS=2
pname=`echo "$0" | sed "s/\.\///g"`

function printHELP {
    echo "------------------------------------------------------------------------"
    echo "$(tput bold) $pname : Measure zonal resp matrix $(tput sgr0)"
    echo "------------------------------------------------------------------------"
    echo "  Measure zonal resp matrix"
    echo "Cleans zonal response matrices in ./zresptmp/ directory"
    echo "if images RMpixindex.fits RMHmat.fits exist, use Hadamard coding/decoding"
    echo "   "
    echo " $(tput bold)USAGE:$(tput sgr0)"
    echo "     $0 [-h] <rm ampl[um]> <normalize>"
    echo ""
    echo " $(tput bold)OPTIONS:$(tput sgr0)"
    echo "     $(tput bold)-h$(tput sgr0)          help"
    echo ""
    echo " $(tput bold)INPUT:$(tput sgr0)"
    echo "     <rm ampl[um]>      RM amplitude [um]"
    echo "     <normalize>        normalize flag"
    echo ""
    echo " $(tput bold)OUTPUT:$(tput sgr0)"
    echo "    LOzrespmat.fits : zonal response matrix"
    echo "    LOwfsref0.fits   : wfs reference"
    echo "    LOwfsmap.fits   : WFS response map"
    echo "    LOdmmap.fits    : DM response map"
    echo ""
    echo "------------------------------------------------------------------------"
}


printHELP1 ()
{
    printf "     $(tput bold)%-25s$(tput sgr0)       Measure zonal resp matrix\n" "$0"
}




# Transform long options to short ones
singlelinehelp=0
for arg in "$@"; do
    shift
    case "$arg" in
        "--help") set -- "$@" "-h" ;;
        "--help1")
            set -- "$@" "-h"
            singlelinehelp=1;
            ;;
        *)        set -- "$@" "$arg"
    esac
done


while getopts :h FLAG; do
    case $FLAG in
        h)  #show help
            if [ "$singlelinehelp" -eq "0" ]; then
                printHELP
            else
                printHELP1
            fi
            exit
            ;;
        \?) #unrecognized option - show help
            echo -e \\n"Option -${BOLD}$OPTARG${NORM} not allowed."
            printHELP
            ;;
    esac
done

shift $((OPTIND-1))







if [ "$1" = "help" ] || [ "$#" -ne $NBARGS ]; then
    if [ "$#" -ne $NBARGS ]; then
        echo "$(tput setaf 1)$(tput bold) Illegal number of parameters ($NBARGS params required, $# entered) $(tput sgr0)"
    fi
    printHELP
    exit
fi


loopnb=$( head -1 LOOPNUMBER )

pname0=$0
pname="aol${loopnb}cLOrespM"


./AOloopControl -n $pname << EOF
cacao.aolnb $loopnb
loadfits "respM_LOmodes.fits" RMpokeC
aolcleanzrm LOrespmat wfsref0 wfsmap dmmap $1 $2
savefits LOrespmat "!LOrespmat.fits"
savefits wfsref0 "!LOwfsref0.fits"
savefits wfsmap "!LOwfsmap.fits"
savefits dmmap "!LOdmmap.fits"
savefits wfsmask "!LOwfsmask.fits"
savefits dmmask "!LOdmmask.fits"
listim
exitCLI
EOF
