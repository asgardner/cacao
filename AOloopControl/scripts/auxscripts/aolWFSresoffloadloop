#!/bin/bash



# number of arguments to script
NBARGS=3


# ======================= PROCESS NAME =================================
pname=`echo "$0${loopnb}" | sed "s/\.\///g"`



CNTMAX=10000000000

function printHELP {
    echo "------------------------------------------------------------------------"
    echo "$(tput bold) $pname : Slow offload of WFS residuals to WFS reference $(tput sgr0)"
    echo "------------------------------------------------------------------------"
    echo "offloads aol#_wfsres_ave to aol#_wfszpoX"
    echo "   "
    echo " $(tput bold)USAGE:$(tput sgr0)"
    echo "     $0 [-ch] <time interval> <averaging coeff> <wfszpo channel>"
    echo ""
    echo " $(tput bold)OPTIONS:$(tput sgr0)"
    echo "     $(tput bold)-h$(tput sgr0)             help"
    echo "     $(tput bold)-c$(tput sgr0) <cnt>       number of steps executed (default: $CNTMAX)"
    echo ""
    echo " $(tput bold)INPUT:$(tput sgr0)"
    echo "     <time interval>       time between updates [sec]"
    echo "     <averaging coeff>     averaging coefficient"
    echo "     <wfszpo channel>      zero point offset channel"
    echo ""
    echo "------------------------------------------------------------------------"
}


printHELP1 ()
{
    printf "     $(tput bold)%-25s$(tput sgr0)       Compute real-time WFS residual image\n" "$0"
}




# Transform long options to short ones
singlelinehelp=0
for arg in "$@"; do
    shift
    case "$arg" in
        "--help") set -- "$@" "-h" ;;
        "--help1")
            set -- "$@" "-h"
            singlelinehelp=1;
            ;;
        *)        set -- "$@" "$arg"
    esac
done





while getopts :hc: FLAG; do
    case $FLAG in
        h)  #show help
            if [ "$singlelinehelp" -eq "0" ]; then
                printHELP
            else
                printHELP1
            fi
            exit
            ;;
        c)
            CNTMAX="$OPTARG"
            ;;
        \?) #unrecognized option - show help
            echo -e \\n"Option -${BOLD}$OPTARG${NORM} not allowed."
            printHELP
            ;;
    esac
done

shift $((OPTIND-1))






if [ "$1" = "help" ] || [ "$#" -ne $NBARGS ]; then
    if [ "$#" -ne $NBARGS ]; then
        echo "$(tput setaf 1)$(tput bold) Illegal number of parameters ($NBARGS params required, $# entered) $(tput sgr0)"
    fi
    printHELP
    exit
fi



loopnb=$( head -1 LOOPNUMBER )





cnt=0

while [ $cnt -lt $CNTMAX ]
do

    echo "$cnt   WFS residual offset to WFS ref"
    ./AOloopControl -n $pname << EOF > /dev/null
readshmim aol${loopnb}_wfsres_ave
# readshmim aol${loopnb}_wfsref
readshmim aol${loopnb}_wfszpo$3
savefits aol${loopnb}_wfsres_ave "!test_aol${loopnb}_wfsres_ave.fits"
savefits aol${loopnb}_wfszpo$3 "test_aol${loopnb}_wfszpo$3.fits"
im=aol${loopnb}_wfszpo$3+$2*aol${loopnb}_wfsres_ave
cpsh im aol${loopnb}_wfszpo$3
savefits aol${loopnb}_wfszpo$3 "test_aol${loopnb}_wfszpo$3.1.fits"
exitCLI
EOF
    let cnt=cnt+1
    sleep $1

done
