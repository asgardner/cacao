#!/bin/bash



# number of arguments to script
NBARGS=1

# ======================= PROCESS NAME =================================
pname=`echo "$0" | sed "s/\.\///g"`





function printHELP {
    echo "------------------------------------------------------------------------"
    echo "$(tput bold) $pname : SET WFS LINEARITY LIMIT $(tput sgr0)"
    echo "------------------------------------------------------------------------"
    echo "  Set WFS linearity limit as multiple of WFS ref"
    echo "   "
    echo " $(tput bold)USAGE:$(tput sgr0)"
    echo "     $0 [-h] <coeff>"
    echo ""
    echo " $(tput bold)OPTIONS:$(tput sgr0)"
    echo "     $(tput bold)-h$(tput sgr0)          help"
    echo ""
    echo " $(tput bold)INPUT:$(tput sgr0)"
    echo "     <coeff>       linearity limit coefficient"
    echo ""
    echo ""
    echo "------------------------------------------------------------------------"
}


printHELP1 ()
{
    printf "     $(tput bold)%-25s$(tput sgr0)       Set WFS linearity limit\n" "$0"
}






# Transform long options to short ones
singlelinehelp=0
for arg in "$@"; do
    shift
    case "$arg" in
        "--help") set -- "$@" "-h" ;;
        "--help1")
            set -- "$@" "-h"
            singlelinehelp=1;
            ;;
        *)        set -- "$@" "$arg"
    esac
done








while getopts :h FLAG; do
    case $FLAG in
        h)  #show help
            if [ "$singlelinehelp" -eq "0" ]; then
                printHELP
            else
                printHELP1
            fi
            exit
            ;;
        \?) #unrecognized option - show help
            echo -e \\n"Option -${BOLD}$OPTARG${NORM} not allowed."
            printHELP
            ;;
    esac
done

shift $((OPTIND-1))





if [ "$1" = "help" ] || [ "$#" -ne $NBARGS ]; then
    if [ "$#" -ne $NBARGS ]; then
        echo "$(tput setaf 1)$(tput bold) Illegal number of parameters ($NBARGS params required, $# entered) $(tput sgr0)"
    fi
    printHELP
    exit
fi




loopnb=$( head -1 LOOPNUMBER )


./AOloopControl -n aol${loopnb}WFSlinlim << EOF
readshmim aol${loopnb}_wfsref0
readshmim aol${loopnb}_imWFSlinlimit
im=aol${loopnb}_wfsref0*$1
cpsh im aol${loopnb}_imWFSlinlimit
exitCLI
EOF
