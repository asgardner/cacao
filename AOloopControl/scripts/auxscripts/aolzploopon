#!/bin/bash



# number of arguments to script
NBARGS=0


# ======================= PROCESS NAME =================================
pname="aol${loopnb}zpwfsl"

NBWFSZPCHAN=8

function printHELP {
    echo "------------------------------------------------------------------------"
    echo "$(tput bold) $pname : WFS zero point offset loop$(tput sgr0)"
    echo "------------------------------------------------------------------------"
    echo " Create zero point WFS channels ($NBWFSZPCHAN channels)"
    echo " Watch semaphore 1 on output (IDwfsref_name) -> sum all channels to update WFS zero point"
    echo " Runs in separate process from RT computation"
    echo "   "
    echo " $(tput bold)USAGE:$(tput sgr0)"
    echo "     $0 [-h] "
    echo ""
    echo " $(tput bold)OPTIONS:$(tput sgr0)"
    echo "     $(tput bold)-h$(tput sgr0)          help"
    echo ""
    echo " $(tput bold)OUTPUT:$(tput sgr0)"
    echo "     out.txt     output file"
    echo ""
    echo "------------------------------------------------------------------------"
}







printHELP1 ()
{
    printf "     $(tput bold)%-25s$(tput sgr0)       WFS zero point offset loop \n" "$0"
}




# Transform long options to short ones
singlelinehelp=0
for arg in "$@"; do
    shift
    case "$arg" in
        "--help") set -- "$@" "-h" ;;
        "--help1")
            set -- "$@" "-h"
            singlelinehelp=1;
            ;;
        *)        set -- "$@" "$arg"
    esac
done


while getopts :h FLAG; do
    case $FLAG in
        h)  #show help
            if [ "$singlelinehelp" -eq "0" ]; then
                printHELP
            else
                printHELP1
            fi
            exit
            ;;
        \?) #unrecognized option - show help
            echo -e \\n"Option -${BOLD}$OPTARG${NORM} not allowed."
            printHELP
            ;;
    esac
done

shift $((OPTIND-1))












if [ "$1" = "help" ] || [ "$#" -ne $NBARGS ]; then
    if [ "$#" -ne $NBARGS ]; then
        echo "$(tput setaf 1)$(tput bold) Illegal number of parameters ($NBARGS params required, $# entered) $(tput sgr0)"
    fi
    printHELP
    exit
fi


loopnb=$( head -1 LOOPNUMBER )



./AOloopControl -n $pname << EOF
readshmim aol${loopnb}_wfsref
readshmim aol${loopnb}_wfsref0
aolzpwfscloop aol${loopnb}_wfszp $NBWFSZPCHAN aol${loopnb}_wfsref0 aol${loopnb}_wfsref
exitCLI
EOF
