#! /bin/bash
# args: <confindex> <maxCPA>


NBARGS=1
pname=`echo "$0" | sed "s/\.\///g"`





function printHELP {
    echo "------------------------------------------------------------------------"
    echo "$(tput bold) $pname : CREATE LO DM MODES FOR AO LOOP  $(tput sgr0)"
    echo "------------------------------------------------------------------------"
    echo "  CREATE LO DM MODES FOR AO LOOP "
    echo "   "
    echo " $(tput bold)USAGE:$(tput sgr0)"
    echo "     $0 [-h] <maxCPA>"
    echo ""
    echo " $(tput bold)OPTIONS:$(tput sgr0)"
    echo "     $(tput bold)-h$(tput sgr0)          help"
    echo ""
    echo " $(tput bold)INPUT:$(tput sgr0)"
    echo "      <maxCPA>      maximum spatial frequency in cycles per aperture"
    echo ""
    echo " $(tput bold) NOTES:$(tput sgr0)"
    echo "  USES (OPTIONAL) : ./conf/aol<loopnb>_dmmask.fits"
    echo "  USES (OPTIONAL) : ./conf/aol<loopnb>_dmslaved.fits"
    echo "                  Telescope pupil mask and slaved actuators"
    echo "  USES (OPTIONAL) : ./conf/TPind.fits"
    echo "                  Modes to be excluded"
    echo ""
    echo "------------------------------------------------------------------------"
}


printHELP1 ()
{
    printf "     $(tput bold)%-25s$(tput sgr0)       Create LO DM modes for AO loop\n" "$0"
}




# Transform long options to short ones
singlelinehelp=0
for arg in "$@"; do
    shift
    case "$arg" in
        "--help") set -- "$@" "-h" ;;
        "--help1")
            set -- "$@" "-h"
            singlelinehelp=1;
            ;;
        *)        set -- "$@" "$arg"
    esac
done


while getopts :h FLAG; do
    case $FLAG in
        h)  #show help
            if [ "$singlelinehelp" -eq "0" ]; then
                printHELP
            else
                printHELP1
            fi
            exit
            ;;
        \?) #unrecognized option - show help
            echo -e \\n"Option -${BOLD}$OPTARG${NORM} not allowed."
            printHELP
            ;;
    esac
done

shift $((OPTIND-1))







if [ "$1" = "help" ] || [ "$#" -ne $NBARGS ]; then
    if [ "$#" -ne $NBARGS ]; then
        echo "$(tput setaf 1)$(tput bold) Illegal number of parameters ($NBARGS params required, $# entered) $(tput sgr0)"
    fi
    printHELP
    exit
fi











loopnb=$( head -1 LOOPNUMBER )

pname0=$0
pname=${pname0#"./"}-$loopnb


mkdir -p Cmodes
mkdir -p tmp


zrmstageddir="./conf_zrm_staged"

./AOloopControl -n $pname << EOF
cacao.aolnb $loopnb
loadfits "dmslaved.fits" dmslaved0
imtrunc dmslaved0 0.0 1.0 dmslaved
loadfits "dmmask.fits" dmmask
loadfits "./conf/TPind.fits" emodes
readshmim aol${loopnb}_dmC
info.imstats aol${loopnb}_dmC
cx=0.5*imsize0-0.5
cy=0.5*imsize1-0.5
od=0.42*imsize0
id=0.13*imsize0
if=0
cacaocc.aolmklodmmodes fmodes imsize0 imsize1 $1 0.8 cx cy od id 0
savefits fmodes "!respM_LOmodes.fits"
exitCLI
EOF
